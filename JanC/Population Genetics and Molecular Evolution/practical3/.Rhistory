knitr::opts_chunk$set(echo = TRUE, fig.width = 6, fig.height = 4, fig.align = "center")
# install.packages("learnPopGen")
library("learnPopGen")
Load the `learnPopGen` library. We are going to use the `selection()` function to study the expected theoretical behaviour of the selection model. This function takes three arguments: `p0` as the starting frequency for the A allele, `w` as a vector of the fitnesses for the three genotypes in the following order: AA, Aa, aa and `time` as the number of generations to run the analysis.
knitr::opts_chunk$set(echo = TRUE, fig.width = 6, fig.height = 4, fig.align = "center")
# install.packages("learnPopGen")
library("learnPopGen")
#Dominant allele
selection(p0 = 0.005, w=c(1, 1, 1-0.05), time=7000)
#Recessive allele
selection(p0 = 0.005, w=c(1, 1-0.05, 1-0.05), time=7000)
#--> The first is True. For a dominant allele (A) starting at a rare frequency: The allele frequency rises rapidly initially, particularly because in a dominant scenario, the advantageous allele A expresses its benefit even in heterozygotes (Aa). Therefore, the allele quickly increases in frequency initially but the rate of increase may slow down as the allele becomes more common.
#--> The second is True. For a recessive allele (A) starting at a rare frequency: The increase in allele frequency is very slow at the beginning. This slow growth is due to the recessive nature of A, where its advantageous effects are only manifested in the homozygous state (AA). Initially, with A being rare, homozygotes AA are even rarer, causing the allele's frequency to grow slowly.
#--> The third is false. Regarding the elimination of deleterious alleles: The statement that deleterious alleles are never completely eliminated is not universally true. The possibility of complete elimination depends on the genetic model in play. In additive scenarios, where deleterious effects are expressed in heterozygotes, deleterious alleles can indeed be driven to extinction. In contrast, in cases where deleterious alleles can hide in heterozygotes (e.g., when deleterious recessive), they might persist at low frequencies, challenging their complete elimination.
knitr::opts_chunk$set(echo = TRUE, fig.width = 6, fig.height = 4, fig.align = "center")
# install.packages("learnPopGen")
library("learnPopGen")
p0 <- 0.005
s <- 0.05
t <- 5000
# CASE 1: Testing rapid initial increase for a dominant rare allele.
w_AA <- 1
w_Aa <- 1
w_aa <- 1 - s
w <- c(w_AA, w_Aa, w_aa)
selection(p0, w, t)
# Observing a swift increase in allele frequency, achieving p = 1 in under 1000 generations, confirms a rapid initial increase for a dominant allele. TRUE
# CASE 2: Examining slow initial increase for a rare recessive allele.
w_AA <- 1
w_Aa <- 1 - s
w_aa <- 1 - s
w <- c(w_AA, w_Aa, w_aa)
selection(p0, w, t)
# There is minimal increase in allele frequency before 3000 generations, post which there is a noticeable rise, validating a slow initial increase for a recessive allele. TRUE
# CASE 3: Determining the complete elimination of deleterious alleles.
w_AA <- 1
w_Aa <- 1 - (0.5 * s)
w_aa <- 1 - s
w <- c(w_AA, w_Aa, w_aa)
selection(p0, w, t)
# Allele frequency of A reaches 1 approximately after 500 generations, indicating that the deleterious allele has been completely eliminated. FALSE
p0 <- 0.005
t <- 52
w_mm <- 1
w_mt <- 1
# Scenario 1: High fitness value for tt genotype
w_tt <- 0.5
w <- c(w_mm, w_mt, w_tt)
selection(p0, w, t)
# With a higher fitness for tt, the frequency of M increases less dramatically.
# Scenario 2: Moderate reduction in fitness for tt genotype
w_tt <- 0.9
w <- c(w_mm, w_mt, w_tt)
selection(p0, w, t)
# With a moderate reduction in tt fitness, the frequency of M shows moderate increase.
# Scenario 3: Low fitness value for tt genotype
w_tt <- 0.1
w <- c(w_mm, w_mt, w_tt)
selection(p0, w, t)
# With a low fitness for tt, the increase in the frequency of M is more pronounced.
# Adjusted fitness scenario to observe specific allele frequency
w_tt <- 0.85
w <- c(w_mm, w_mt, w_tt)
selection(p0, w, t)
# Setting tt fitness to 0.85 results in M allele frequency approximately at 0.7 after 52 generations.
w_mm <- 1
w_mt <- 1
w_tt <- 0.85
drift.selection(p0 = 0.005, w = c(w_mm, w_mt, w_tt), ngen = 52, Ne = 100, nrep = 20)
# Define the function to test Hardy-Weinberg Equilibrium
HWE_test <- function(N11, N12, N22) {
# Calculate total number of individuals
N = N11 + N12 + N22
# Calculate allele frequencies
p = (N11 + N12/2) / N # Frequency of allele X1
q = 1 - p # Frequency of allele X2
# Calculate observed genotype frequencies
f11 = N11 / N # Frequency of genotype X11
f12 = N12 / N # Frequency of genotype X12
f22 = N22 / N # Frequency of genotype X22
# Calculate expected genotype frequencies under HWE
E11 = N * p^2
E12 = N * 2 * p * q
E22 = N - E11 - E12
# Calculate chi-square test statistic
Chi_value = (N11 - E11)^2 / E11 + (N12 - E12)^2 / E12 + (N22 - E22)^2 / E22
prob = pchisq(Chi_value, df = 1, lower = F)
# Return all relevant calculations
return (list("N" = N, "N11" = N11, "N12" = N12, "N22" = N22,
"p" = p, "q" = q,
"f11" = f11, "f12" = f12, "f22" = f22,
"Chi_value" = Chi_value, "prob" = prob))
}
# Analysis of Hardy-Weinberg Equilibrium in children before selection
res_children <- HWE_test(189, 89, 9)
critical_value = qchisq(0.95, df = 1)
chisq_value = round(res_children$Chi_value, 3)
if (chisq_value > critical_value){
print("The children data (before selection) is not consistent with Hardy-Weinberg Equilibrium.")
} else {
print("The children data (before selection) is consistent with Hardy-Weinberg Equilibrium.")
}
# Display genotype frequencies in children
t_children <- 189 + 89 + 9
print(paste0('AA: ', round(189 / t_children, 3),
' AS: ', round(89 / t_children, 3),
' SS: ', round(9 / t_children, 3)))
# Analysis of Hardy-Weinberg Equilibrium in adults after selection
res_adults <- HWE_test(400, 249, 5)
chisq_value = round(res_adults$Chi_value, 3)
if (chisq_value > critical_value){
print("The adult data (after selection) is not consistent with Hardy-Weinberg Equilibrium.")
} else {
print("The adult data (after selection) is consistent with Hardy-Weinberg Equilibrium.")
}
# Display genotype frequencies in adults
t_adult <- 400 + 249 + 5
print(paste0('AA: ', round(400 / t_adult, 3),
' AS: ', round(249 / t_adult, 3),
' SS: ', round(5 / t_adult, 3)))
children <- c(AA = 189, AS = 89, SS = 9)
adults <- c(AA = 400, AS = 249, SS = 5)
freq_children <- children / t_children
freq_adults <- adults / t_adult
relative_survival <- freq_adults / freq_children
relative_fitness <- relative_survival / relative_survival["AS"]
s1 <- 1 - relative_survival["AA"]
s2 <- 1 - relative_survival["SS"]
# Simulate genetic drift with selection using high effective population size
drift.selection(p0 = 0.9, w = c(0.76, 1, 0.199), ngen = 100, Ne = 500, nrep = 20)
# With a larger effective population size (Ne = 500), the impact of genetic drift is reduced, resulting in fewer instances where alleles become fixed.
# Simulate genetic drift with selection using moderate effective population size
drift.selection(p0 = 0.9, w = c(0.76, 1, 0.199), ngen = 100, Ne = 100, nrep = 20)
# With a moderate effective population size (Ne = 100), there is an intermediate level of genetic drift, showing occasional fixation of alleles.
# Simulate genetic drift with selection using small effective population size
drift.selection(p0 = 0.9, w = c(0.76, 1, 0.199), ngen = 100, Ne = 10, nrep = 20)
# With a smaller effective population size (Ne = 10), the impact of genetic drift is more pronounced, leading to more frequent fixation of alleles.
# Discussion of results:
# The stabilizing effect of selection becomes more pronounced with increasing effective population size, which lowers the frequency of allele fixation brought on by genetic drift. However, drift may outweigh the effects of selection in smaller populations, increasing the variability and unpredictable nature of allele frequencies. This illustrates how population size can affect how genetic drift and selection are balanced, especially when heterozygotes are favored by selection.
knitr::opts_chunk$set(echo = TRUE, fig.width = 6, fig.height = 4, fig.align = "center")
# install.packages("learnPopGen")
library("learnPopGen")
p0 <- 0.005
s <- 0.05
t <- 5000
# CASE 1: If A rare and dominant, initial increase is rapid. TRUE
w_AA <- 1
w_Aa <- 1
w_aa <- 1-s
w <- c(w_AA, w_Aa, w_aa)
selection(p0, w, t)
# There is a rapid increase on the frequency of A. Before 1000 generations we have already p = 1.
# CASE 2: If A rare and recessive, initial increase is very slow. TRUE
w_AA <- 1
w_Aa <- 1-s
w_aa <- 1-s
w <- c(w_AA, w_Aa, w_aa)
selection(p0, w, t)
# Before 3000 generations the increase is very little. When reaching 3000 generations there is an increase on the frequency of A.
# CASE 3: Deleterious alleles are never completely eliminated. FALSE
w_AA <- 1
w_Aa <- 1-(0.5*s)
w_aa <- 1-s
w <- c(w_AA, w_Aa, w_aa)
selection(p0, w, t)
# After 500 generations more or less the frequency of A is 1, which means that the other allele has been deleted.
p0 <- 0.005
t <- 52
w_mm <- 1
w_mt <- 1
w_tt <- 0.5
w <- c(w_mm, w_mt, w_tt)
selection(p0, w, t)
w_tt <- 0.9
w <- c(w_mm, w_mt, w_tt)
selection(p0, w, t)
w_tt <- 0.1
w <- c(w_mm, w_mt, w_tt)
selection(p0, w, t)
# If the fitness value of tt is high, there is a lower increase on the frequency of M.
# If the fitness value of tt is low, there is a higher increase on the frequency of M.
w_tt <- 0.85
w <- c(w_mm, w_mt, w_tt)
selection(p0, w, t)
# If we change the fitness value to 0.85 --> s = 0.15 we get a frequency of M close to 0.7, which is the one we wanted to get (the freq of the M alllele after 52 generations)
w_mm <- 1
w_mt <- 1
w_tt <- 0.85
drift.selection(p0 = 0.005, w = c(w_mm, w_mt, w_tt), ngen = 52, Ne = 100, nrep = 20)
HWE_test <- function(N11, N12, N22) {
N = N11 + N12 + N22 # N total sample
# Allele frequencies estimation
p = (N11 + N12/2)/N # p is the frequency of X1
q = 1 - p # q is the frequency of X2
#Genotype frequencies
f11 = N11/N # frequency of X11 genotype
f12 = N12/N # frequency of X12 genotype
f22 = N22/N # frequency of X22 genotype
# Expected HWE
E11 = N*p^2
E12 = N*2*p*q
E22 = N-E11-E12
# Chi-square value and probability
Chi_value = (N11-E11)^2/E11 + (N12-E12)^2/E12 + (N22-E22)^2/E22
prob = pchisq(Chi_value, df = 1, lower = F)
# Output
return (list("N" = N, "N11" = N11, "N12" = N12, "N22" = N22,
"p" = p, "q" = q,
"f11" = f11, "f12" = f12, "f22" = f22,
"Chi_value" = Chi_value, "prob" = prob))
}
t_children <- 189+89+9
t_adult <- 400+249+5
res <- HWE_test(189, 89, 9)
critical_value = qchisq(0.95, df = 1)
chisq_value = round(res$Chi_value,3)
if (chisq_value > critical_value){
print("The children data (before selection) is not consistent with Hardy-Weinberg Equilibrium.")
} else {
print("The children data (before selection) is consistent with Hardy-Weinberg Equilibrium.")
}
print(paste0('AA: ', round(189/t_children, 3), ' AS: ', round(89/t_children, 3), ' SS: ', round(9/t_children, 3)))
res <- HWE_test(400, 249, 5)
critical_value = qchisq(0.95, df = 1)
chisq_value = round(res$Chi_value,3)
if (chisq_value > critical_value){
print("The adult data (after selection) is not consistent with Hardy-Weinberg Equilibrium.")
} else {
print("The adult data (after selection) is consistent with Hardy-Weinberg Equilibrium.")
}
print(paste0('AA: ', round(400/t_adult, 3), ' AS: ', round(249/t_adult, 3), ' SS: ', round(5/t_adult, 3)))
children <- c(AA = 189, AS = 89, SS = 9)
adults <- c(AA = 400, AS = 249, SS = 5)
freq_children <- children / t_children
freq_adults <- adults / t_adult
relative_survival <- freq_adults / freq_children
relative_fitness <- relative_survival / relative_survival["AS"]
s1 <- 1 - relative_survival["AA"]
s2 <- 1 - relative_survival["SS"]
drift.selection(p0 = 0.9, w = c(0.76, 1, 0.199), ngen = 100, Ne = 500, nrep = 20)
drift.selection(p0 = 0.9, w = c(0.76, 1, 0.199), ngen = 100, Ne = 100, nrep = 20)
drift.selection(p0 = 0.9, w = c(0.76, 1, 0.199), ngen = 100, Ne = 10, nrep = 20)
# When increasing th effective population we get less fixed alleles. If the Ne is low, there will be more fixed alleles.
# When having strong selection in favor of the heterozygote, the effect of drift is higher in small populations.
# This happens because genetic drift can lead to random changes in allele frequencies. Genetic drift can weaken the impact of strong selection, leading to unpredictable changes in allele frequencies over time.
